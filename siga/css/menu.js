/ *! jQuery v3.3.1 -ajax, -ajax / jsonp, -ajax / load, -ajax / parseXML, -ajax / script, -ajax / var / location, -ajax / var / nonce, -ajax / var / rquery, -ajax / xhr, -manipulation / _evalUrl, -event / ajax, -effects, -effects / Tween, -effects / animatedSelector | (c) JS Foundation e outros colaboradores | jquery.org/license * /
! function (e, t) {"use strict"; "object" == typeof module && "object" == typeof module.exports? module.exports? module.exports = e.document? t (e,! 0): function (e) {if (! e.document) lança novo erro ("jQuery requer uma janela com um documento"); retorna t (e)}: t (e)} ("indefinido"! = tipo de janela? window: this, function ( e, t) {"use strict"; var n = [], r = e.document, i = Object.getPrototypeOf, o = n.slice, a = n.concat, u = n.push, s = n. indexOf, l = {}, c = l.toString, f = l.hasOwnProperty, d = f.toString, p = d.call (Object), h = {}, g = função e (t) {return "function "== typeof t &&" number "! = typeof t.nodeType}, v = function e (t) {return null! = t && t === t.window}, y = {type:! 0, src:! 0, noModule:! 0}; função m (e, t, n) {vari, o = (t = t || r) .createElement ("script"); if (o.text = e, n) para (i em y) n [i] && (o [i] = n [i]); t.head.appendChild (o) .parentNode.removeChild (o)} função b (e) {return null == e? e + "": "objeto" == tipo de e || "função" == tipo de e? l [c.call (e)] || " objeto ": typeof e} var x =" 3.3.1 -ajax, -ajax / jsonp, -ajax / load, -ajax / parseXML, -ajax / script, -ajax / var / location, -ajax / var / nonce, -ajax / var / rquery, -ajax / xhr, -manipulation / _evalUrl, -event / ajax, -effects, -effects / Tween, -effects / animatedSelector ", w = function (e, t) {retorna novo w.fn .init (e, t)}, C = / ^ [\ s \ uFEFF \ xA0] + | [\ s \ uFEFF \ xA0] + $ / g; w.fn = w.prototype = {jquery: x, construtor : w, length: 0, toArray: function () {return o.call (this)}, get: function (e) {return null == e? o.call (this): e <0? this [e + this.length]: this [e]}, pushStack: function (e) {var t = w.merge (this.constructor (), e); return t.prevObject = this, t}, cada um: function (e) {return w.each (this, e)}, map: function (e) {return this.pushStack (w.map (this, function (t, n) {retorna e.call (t, n, t)}) )},fatia: function () {retorna this.pushStack (o.apply (this, argumentos))}, primeiro: function () {retorna this.eq (0)}, último: function () {retorna this.eq (-1 )}, eq: function (e) {var t = this.length, n = + e + (e <0? t: 0); retorna this.pushStack (n> = 0 && n <t? [this [n]]: [])}, fim: função () {retorna this.prevObject || this.constructor ()}, push: u, tipo: n.sort, emenda: n.splice}, w.extend = w.fn.extend = function () {var e, t, n, r, i, o, a = argumentos [0] || {}, u = 1, s = argumentos. comprimento, l =! 1; for ("booleano" = = tipo de a && (l = a, a = argumentos [u] || {}, u ++), "objeto" == tipo de a || g (a) || (a = {}), u === s && ( a = isto, u -); u <s; u ++) if (null! = (e = argumentos [u])) para (t em e) n = a [t], a! == (r = e [t]) && (l && r && (w.isPlainObject (r) || (i = Array.isArray (r)))? (i? (i =! 1, o = n && Array.isArray (n)? n: [] ): o = n && w.isPlainObject (n)? n: {}, a [t] = w.extend (l, o, r)): nulo 0! == r && (a [t] = r));retornar a}, w.extend ({expando: "jQuery" + (x + Math.random ()). replace (/ \ D / g, ""), isReady:! 0, erro: function (e) {throw novo Erro (e)}, noop: function () {}, isPlainObject: function (e) {var t, n; return! (! e || "[objeto Objeto]"! == c.call (e)) && (! (t = i (e)) || "function" == typeof (n = f.call (t, "construtor") && t.constructor) && d.call (n) === p)}, isEmptyObject : function (e) {var t; para (t em e) return! 1; return! 0}, globalEval: function (e) {m (e)}, cada um: function (e, t) {var n, r = 0; if (T (e)) {for (n = comprimento.r; r <n; r ++) if (! 1 === t.call (e [r], r, e [r])) break } mais para (r em e) se (! 1 === t.call (e [r], r, e [r])) break; return e}, trim: function (e) {return null == e ? "" :( e + ""). substitua (C, "")}, makeArray: function (e, t) {var n = t || []; return null! = e && (T (Object (e)) ? w.merge (n, "string" == tipo de e? [e]: e): u.call (n, e)), n},inArray: function (e, t, n) {return null == t? -1: s.call (t, e, n)}, mesclagem: function (e, t) {for (var n = + t.length , r = 0, i = e.length; r <n; r ++) e [i ++] = t [r]; retorna e.length = i, e}, grep: function (e, t, n) {for ( var r, i = [], o = 0, a = e.length, u =! n; o <a; o ++) (r =! t (e [o], o))! == u && i.push ( e [o]); return i}, map: function (e, t, n) {var r, i, o = 0, u = []; if (T (e)) para (r = e.length; o <r; o ++) null! = (i = t (e [o], o, n)) && u.push (i); caso contrário, para (o em e) null! = (i = t (e [o] , o, n)) && u.push (i); return a.apply ([], u)}, guid: 1, support: h}), "function" == typeof Symbol && (w.fn [Symbol.iterator ] = n [Symbol.iterator]), w.each ("Boolean Number String Função Matriz Data RegExp Object Error Symbol" .split (""), function (e, t) {l ["[object" + t + "] "] = t.toLowerCase ()}); função T (e) {var t = !! e &&" comprimento "em e && e.length, n = b (e); retorno! g (e) &&!v (e) && ("matriz" === n || 0 === t || "número" == tipo de t && t> 0 && t-1 em e)} var E = função (e) {var t, n, r, i, o, a, u, s, l, c, f, d, p, h, g, v, y, m, b, x = "chiar" + 1 * nova data, w = e.document , C = 0, T = 0, E = ae (), N = ae (), k = ae (), A = função (e, t) {return e === t && (f =! 0), 0 }, D = {}. HasOwnProperty, S = [], L = S.pop, j = S.push, q = S.push, O = S.slice, P = função (e, t) {for (var n = 0, r = e.length; n <r; n ++) if (e [n] === t) retorna n; return-1}, H = "marcado | selecionado | assíncrono | async | autofoco | autoplay | controles | adiar | desativado | oculto | ismap | loop | múltiplo | aberto | somente leitura | obrigatório | com escopo definido ", I =" [\\ x20 \\ t \\ r \\ n \\ f] ", R =" (?: \ \\\. | [\\ w-] | [^ \ 0 - \\ xa0]) + ", B =" \\ ["+ I +" * ("+ R +") (?: "+ I +" * ([* ^ $ |! ~]? =) "+ I +" * (?: '((?: \\\\. | [^ \\\\'])) *) '| \ "((?: \\\\. | [^ \\\\\ "]) *) \" | ("+ R +")) |) "+ I +"* \\] ", M =" :( "+ R +") (?: \\ ((('((?: \\\\. | [^ \\\\']) *) '| \ " ((?: \\\\. | [^ \\\\\ "]) *) \") | ((?: \\\\. | [^ \\\\ () [\\]] | "+ B +") *) |. *) \\) |) ", W = novo RegExp (I +" + "," g "), $ = novo RegExp (" ^ "+ I +" + | ((?: ^ | [^ \\\\]) (?: \\\\.) *) "+ I +" + $ "," g "), F = novo RegExp (" ^ "+ I +" *, "+ I + "*"), z = novo RegExp ("^" + I + "* ([> + ~] |" + I + ")" + I + "*"), _ = novo RegExp ("=" + I + "* ( [^ \\] '\ "] *?)" + I + "* \\]", "g"), U = novo RegExp (M), V = novo RegExp ("^" + R + "$"), X = {ID: new RegExp ("^ # (" + R + ")"), CLASS: new RegExp ("^ \\. (" + R + ")"), TAG: new RegExp ("^ (" + R + "| [*])"), ATTR: novo RegExp ("^" + B), PSEUDO: novo RegExp ("^" + M), FILHO:new RegExp ("^ :( somente | primeiro | último | enésimo | enésimo-último) - (filho | do tipo) (?: \\ (" + I + "* (par | | ímpar | | (([+ -] | ) (\\ d *) n |) "+ I +" * (?: ([+ -] |) "+ I +" * (\\ d +) |)) "+ I +" * \\) |) ", "i"), bool: new RegExp ("^ (?:" + H + ") $", "i"), needsContext: new RegExp ("^" + I + "* [> + ~] |: (par | ímpar | eq | gt | lt | enésimo | primeiro | último) (?: \\ ("+ I +" * ((?: - \\ d)? \\ d *) "+ I +" * \\) |) (? = [^ -] | $) "," i ")}, Q = / ^ (?: input | select | textarea | button) $ / i, Y = / ^ h \ d $ / i, G = / ^ [^ {] + \ {\ s * \ [nativo \ w /, K = / ^ (?: # ([\ w -] +) | (\ w +) | \. ([\ w -] + )) $ /, J = / [+ ~] /, Z = novo RegExp ("\\\\ ([\\ da-f] {1,6}" + I + "? | (" + I + ") | .) "," ig "), ee = function (e, t, n) {var r =" 0x "+ t-65536; retornar r! == r || n? t: r <0? String.fromCharCode (r + 65536): String.fromCharCode (r >> 10 | 55296,1023 & r | 56320)},te = / ([\ 0- \ x1f \ x7f] | ^ -? \ d) | ^ - $ | [^ \ 0- \ x1f \ x7f- \ uFFFF \ w -] / g, ne = função (e, t) {return t? "\ 0" === e? "\ ufffd": e.slice (0, -1) + "\\" + e.charCodeAt (e.length-1) .toString (16) + "": "\\" + e}, re = function () {d ()}, ie = me (função (e) {return! 0 === e.disabled && ("form" em e || " label "em e)}, {dir:" parentNode ", próximo:" legend "}); tente {q.apply (S = O.call (w.childNodes), w.childNodes), S [w.childNodes. length] .nodeType} catch (e) {q = {apply: S.length? function (e, t) {j.apply (e, O.call (t))}: function (e, t) {var n = e.length, r = 0; while (e [n ++] = t [r ++]); e.length = n-1}}} função oe (e, t, r, i) {var o, u, l , c, f, h, y, m = t &&t.ownerDocument, C = t? t.nodeType: 9; if (r = r || [], "string"! = tipo de e ||! e || 1! == C && 9! == C && 11! == C) return r; if (! I && ((t? T.ownerDocument || t: w)! == p && d (t), t = t || p, g)) {if (11!== C && (f = K.exec (e))) if (o = f [1]) {if (9 === C) {if (! (L ​​= t.getElementById (o))) return r; if (l.id === o) retorna r.push (l), r} else if (m && (l = m.getElementById (o)) && b (t, l) && l.id === o) return r .push (l), r} else {if (f [2]) retorna q.apply (r, t.getElementsByTagName (e)), r; if ((o = f [3]) && n.getElementsByClassName && t.getElementsByClassName) retornar q.apply (r, t.getElementsByClassName (o)), r} if (n.qsa &&! k [e + ""] && (! v ||! v.test (e))) {if (1! = = C) m = t, y = e; caso contrário, se ("objeto"! == t.nodeName.toLowerCase ()) {(c = t.getAttribute ("id"))? C = c.replace (te, ne): t.setAttribute ("id", c = x), u = (h = a (e)). length; while (u -) h [u] = "#" + c + "" + ye ( h [u]); y = h.join (","), m = J.test (e) && ge (t.parentNode) || t} se (y) tentar {retornar q.aplicar (r, m. querySelectorAll (y)), r} catch (e) {} finalmente {c === x && t.removeAttribute ("id")}}} return s (e.replace ($, "$ 1"), t, r, i)} função ae () {var e = []; função t (n, i) {return e.push (n + "")> r.cacheLength && delete t [e.shift ()], t [n + ""] = i} retorna t} função ue (e) {retorna e [x] =! 0, e} função se (e) {var t = p.createElement ("fieldset"); tente {return !! e (t)} catch (e) {return! 1} finalmente {t.parentNode && t.parentNode.removeChild (t), t = null}} função le (e, t) {var n = e.split ("|"), i = n.length; while (i -) r.attrHandle [n [i]] = t} função ce (e, t) {var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex-t.sourceIndex; if (r) retorna r; if (n) while (n = n .nextSibling) if (n === t) return-1; return e? 1: -1} function fe (e) {return function (t) {return "input" === t.nodeName.toLowerCase () && t .type === e}} função de (e) {função de retorno (t) {var n = t.nodeName.toLowerCase (); return ("input" === n || "button" === n) && t.type === e}} função pe (e) {função de retorno (t) {return "form" in t ? t.parentNode &&! 1 === t.disabled? "label" em t? "label" em t.parentNode? t.parentNode.disabled === e: t.disabled === e: t.isDisabled == = e || t.isDisabled! ==! e && ie (t) === e: t.disabled === e: "label" na função t && t.disabled === e}} ele (e) {retorna ue ( função (t) {retornar t = + t, ue (função (n, r) {vari, o = e ([], n.length, t), a = o.length; while (a -) n [i = o [a]] && (n [i] =! (r [i] = n [i]))})})} função ge (e) {retornar e && "indefinido"! = tipo de e.getElementsByTagName && e } n = oe.support = {}, o = oe.isXML = função (e) {var t = e && (e.ownerDocument || e) .documentElement; return !! t && "HTML"! == t.nodeName} , d = oe.setDocument = função (e) {var t, i, a = e? e.ownerDocument || e: w;retornar a! == p && 9 === a.nodeType && a.documentElement? (p = a, h = p.documentElement, g =! o (p), w! == p && (i = p.defaultView) && i.top! == i && (i.addEventListener? i.addEventListener ("descarregar", re,! 1): i.attachEvent && i.attachEvent ("onunload", re)), n.atributes = se (função (e) {return e. className = "i",! e.getAttribute ("className")}), n.getElementsByTagName = se (função (e) {retornar e.appendChild (p.createComment ("")) ,! e.getElementsByTagName ("* ") .length}), n.getElementsByClassName = G.test (p.getElementsByClassName), n.getById = se (função (e) {retornar h.appendChild (e) .id = x,! p.getElementsByName ||! p.getElementsByName (x) .length}), n.getById? (r.filter.ID = função (e) {var t = e.replace (Z, ee); função de retorno (e) {return e.getAttribute ( "id") === t}}, r.find.ID = function (e, t) {if ("indefinido "! = tipo de t.getElementById && g) {var n = t.getElementById (e); retorno n? [n]: []}}) :( r.filter.ID = função (e) {var t = e. substituir (Z, ee); função de retorno (e) {var n = "indefinido"! = tipo de e.getAttributeNode && e.getAttributeNode ("id"); retornar n && n.value === t}}, r.find.ID = função (e, t) {if ("indefinido"! = tipo de t.getElementById && g) {var n, r, i, o = t.getElementById (e); if (o) {if ((n = o.getAttributeNode ( "id")) && n.value === e) return [o]; i = t.getElementsByName (e), r = 0; while (o = i [r ++]) if ((n = o.getAttributeNode (" id ")) && n.valor === e) retornar [o]} retornar []}}), r.find.TAG = n.getElementsByTagName? função (e, t) {retornar" indefinido "! = tipo de t. getElementsByTagName? t.getElementsByTagName (e): n.qsa? t.querySelectorAll (e): void 0}: function (e, t) {var n, r = [], i = 0, o = t.getElementsByTagName (e) );E se("* "=== e) {while (n = o [i ++]) 1 === n.nodeType && r.push (n); retorno r} retorno o}, r.find.CLASS = n.getElementsByClassName && function (e, t ) {if ("indefinido"! = tipo de t.getElementsByClassName && g) retorna t.getElementsByClassName (e)}, y = [], v = [], (n.qsa = G.test (p.querySelectorAll)) && (se (função (e) {h.appendChild (e) .innerHTML = "<a id='"+x+"'> </a> <selecione id = '" + x + "- \ r \\' msallowcapture = '' > <opção selecionada = ''> </option> </select> ", e.querySelectorAll (" [msallowcapture ^ = ''] "). length && v.push (" [* ^ $] = "+ I +" * ( ?: '' | \ "\") "), e.querySelectorAll (" [selected] "). length || v.push (" \\ ["+ I +" * (?: valor | "+ H +") "), e.querySelectorAll (" [id ~ = "+ x +"-] "). length || v.push (" ~ = "), e.querySelectorAll (": marcado "). length || v.push (": marcado "), e.querySelectorAll (" a # "+ x + "+ *"). length || v.push (". #. + [+ ~]")}), se (função (e) {e.innerHTML = "<a href = '' disabled = 'disabled' > </a> <selecione desabilitado = 'desabilitado'> <opção /> </select> "; var t = p.createElement (" entrada "); t.setAttribute (" tipo "," oculto "), e. appendChild (t) .setAttribute ("name", "D"), e.querySelectorAll ("[name = d]"). length && v.push ("name" + I + "* [* ^ $ |! ~]? = "), 2! == e.querySelectorAll (": enabled "). Length && v.push (": enabled ",": disabled "), h.appendChild (e) .disabled =! 0,2! == e. querySelectorAll (": disabled"). length && v.push (": enabled", ": disabled"), e.querySelectorAll ("* ,: x"), v.push (",. *:")})), (n.matchesSelector = G.test (m = h.matches || h.webkitMatchesSelector || h.mozMatchesSelector || h.oMatchesSelector || h.msMatchesSelector)) && se (função (e) {n.disconnectedMatch = m.call (e, "*"), m. chamada (e, "[s! = '']: x"), y.push ("! =", M)}), v = comprimento de v. && new RegExp (v.join ("|")), y = y.length && new RegExp (y.join ("|")), t = G.test (h.compareDocumentPosition), b = t || G.test (h.contains)? function (e, t) {var n = 9 === e.nodeType? E.documentElement: e, r = t && t.parentNode; return e === r ||! (! R || 1! == r.nodeType ||! (N. contém? N .contains (r): e.compareDocumentPosition && 16 & e.compareDocumentPosition (r))}}: function (e, t) {if (t) while (t = t.parentNode) if (t === e) return! 0; return ! 1}, função A = t? (E,t) {if (e === t) retorna f =! 0,0; var r =! e.compareDocumentPosition-! t.compareDocumentPosition; retorna r || (1 & (r = (e.ownerDocument || e) = == (t.ownerDocument || t)? e.compareDocumentPosition (t): 1) ||! n.sortDetached && t.compareDocumentPosition (e) === r? e === p || e.ownerDocument === w && (w, e)? - 1: t === p || t.ownerDocument === w && b (w, t)? 1: c? P (c, e) -P (c, t): 0: 4 & r ? -1: 1)}: function (e, t) {if (e === t) retorna f =! 0,0; var n, r = 0, i = e.parentNode, o = t.parentNode, a = [e], u = [t]; se (! i ||! o) retornar e === p? -1: t === p? 1: i? -1: o? 1: c? P (c, e) -P (c, t): 0; se (i === o) retorna ce (e, t); n = e; while (n = n.parentNode) a.shift (n) ; n = t; while (n = n.parentNode) u.shift (n); while (a [r] === u [r]) r ++; return r? ce (a [r], u [r] ): a [r] === w? -1: u [r] === w? 1: 0}, p): p}, oe.matches = função (e, t) {retorno oe (e, null, null, t)}, oe.matchesSelector = function (e, t) {if ((e.ownerDocument || e)! == p && d (e), t = t.replace (_, "= '$ 1' ] "),n.matchesSelector && g &&! k [t + ""] && (! y ||! y.test (t)) && (! v ||! v.test (t))) tente {var r = m.call (e, t); if (r || n.disconnectedMatch || e.document && 11! == e.document.nodeType) return r} catch (e) {} return oe (t, p, null, [e]). length> 0}, oe.contains = function (e, t) {return (e.ownerDocument || e)! == p && d (e), b (e, t)}, oe.attr = function (e, t) { (e.ownerDocument || e)! == p && d (e); var i = r.attrHandle [t.toLowerCase ()], o = i && D.call (r.attrHandle, t.toLowerCase ())? i (e , t,! g): void 0; return void 0! == o? o: n.atributos ||! g? e.getAttribute (t) :( o = e.getAttributeNode (t)) && o.especificado? .value: null}, oe.escape = função (e) {retornar (e + ""). substituir (te, ne)}, oe.error = função (e) {lançar novo erro ("Erro de sintaxe, expressão não reconhecida: "+ e)}, oe.uniqueSort = função (e) {var t, r = [], i = 0, o = 0; if (f =! n.detectDuplicates, c =! n.sortStable && e.slice (0), e.sort (A), f) {while (t = e [o ++]) t === e [o] && (i = r.push (o)); while (i- -) e.splice (r [i], 1)} retorna c = nulo, e}, i = oe.getText = função (e) {var t, n = "", r = 0, o = e.nodeType ; if (o) {if (1 === o || 9 === o || 11 === o) {if ("string" == tipo de e.textContent) retorna e.textContent; for (e = e.firstChild; e; e = e.nextSibling) n + = i (e)} else if (3 === o || 4 === o) retorna e.nodeValue} else while (t = e [r ++]) n + = i (t); return n}, (r = oe.selectors = {cacheLength: 50, createPseudo: ue, match: X, attrHandle: {}, encontre: {}, relativo: {">": {dir : "parentNode", primeiro:! 0}, "": {dir: "parentNode"}, "+": {dir: "previousSibling", primeiro:! 0}, "~": {dir: "previousSibling"} }, preFilter: {ATTR: função (e) {retorne e [1] = e [1]. substitua (Z, ee), e [3] = (e [3] || e [4] || e [ 5] || ""). Substitua (Z, ee), "~ =" === e [2] &&(e [3] = "" + e [3] + ""), e.slice (0,4)}, CRIANÇA: função (e) {return e [1] = e [1] .toLowerCase (), "nésimo" === e [1]. fatia (0,3)? (e [3] || oe.erro (e [0]), e [4] = + (e [4]? e [5 ] + (e [6] || 1): 2 * ("par" === e [3] || "ímpar" === e [3])), e [5] = + (e [7 ] + e [8] || "ímpar" === e [3])): e [3] && oe.error (e [0]), e}, PSEUDO: função (e) {var t, n = ! e [6] && e [2]; return X.CHILD.test (e [0])? null: (e [3]? e [2] = e [4] || e [5] || "" : n && U.teste (n) && (t = a (n,! 0)) && (t = n.indexOf (")", n.length-t) -n.length) && (e [0] = e [0]. Fatia (0, t), e [2] = n fatia (0, t)), e fatia (0,3))}}, filtro: {TAG: function (e) {var t = e.replace (Z, ee) .toLowerCase (); return "*" === e? function () {return! 0}: function (e) {return e.nodeName && e.nodeName.toLowerCase () === t}}, CLASS: function (e) {var t = E [e + ""]; retorna t || (t = novo RegExp ("(^ |" + I + ") "+ e +" ("+ I +" | $) ")) && E (e, função (e) {return t.test (" string "== tipo de e.className && e.className ||" undefined "! = typeof e .getAttribute && e.getAttribute ("classe") || "")})}, ATTR: function (e, t, n) {return function (r) {vari = oe.attr (r, e); return null = = i? "! =" === t:! t || (i + = "", "=" === t? i === n: "! =" === t? i! == n : "^ =" === t? n && 0 === i.indexOf (n): "* =" === t? n && i.indexOf (n)> - 1: "$ =" === t? n &&i .slice (-n.length) === n: "~ =" === t? ("" + i.place (W, "") + "") .indexOf (n)> - 1: "| = "=== t && (i === n || i.slice (0, n.length + 1) === n +" - "))}}, CRIANÇA: function (e, t, n, r, i) {var o = "enésimo"! == fatia e (0,3), a = "última"! == fatia e (-4), u = "do tipo" === t;return 1 === r && 0 === i? function (e) {return !! e.parentNode}: função (t, n, s) {var l, c, f, d, p, h, g = o! == a? "nextSibling": "irmãos anteriores", v = t.parentNode, y = u && t.nodeName.toLowerCase (), m =! s &&! u, b =! 1; if (v) {if (o) { while (g) {d = t; while (d = d [g]) if (u? d.nodeName.toLowerCase () === y: 1 === d.nodeType) return! 1; h = g = "only" === e &&! h && "nextSibling"} retorna! 0} if (h = [a? v.firstChild: v.lastChild], a && m) {b = (p = (l = (c = (f = (d = v) [x] || (d [x] = {})) [d.uniqueID] || (f [d.uniqueID] = {})] [e] || []) [0] === C && l [1]) && l [2], d = p && v.childNodes [p]; while (d = ++ p && d && d [g] || (b = p = 0) || h.pop ()) se (1 === d.nodeType && ++ b && d === t) {c [e] = [C, p, b]; break}} else if (m && (b = p = (l = (c = (f = (d = t) [x] || (d [x] = {})) [d.uniqueID] || (f [d.uniqueID] = {})] [e] || []) [0 ] === C && l [1]) ,! 1 === b) enquanto (d = ++ p &&d && d [g] || (b = p = 0) || h.pop ()) if ((u? d.nodeName.toLowerCase () === y: 1 === d.nodeType) && ++ b && (m && ((c = (f = d [x] || (d [x] = {}))] [d.uniqueID] || (f [d.uniqueID] = {})) [e] = [C , b]), d === t)) break; return (b- = i) === r || b% r == 0 && b / r> = 0}}}, PSEUDO: function (e, t) {var n, i = r.pseudos [e] || r.setFilters [e.toLowerCase ()] || oe.error ("pseudo não suportado:" + e); retorne i [x]? i (t): i.length> 1? (n = [e, e, "", t], r.setFilters.hasOwnProperty (e.toLowerCase ())? ue (função (e, n) {var r, o = i (e , t), a = o.length; while (a -) e [r = P (e, o [a])] =! (n [r] = o [a])}): function (e) {return i (e, 0, n)}): i}}, pseudos: {not: ue (função (e) {var t = [], n = [], r = u (e.replace ($, "$ 1")); return r [x]? Ue (function (e, t, n, i) {var o, a = r (e, null, i, []), u = e.length; while ( u -) (o = a [u]) && (e [u] =! (t [u] = o))}): function (e, i, o) {retorno t [0] = e, r (t, nulo, o, n), t [0] = nulo,! n.pop ()}}), possui:ue (função (e) {função de retorno (t) {retorno oe (e, t). comprimento> 0}}), contém: ue (função (e) {retorno e = e. substituir (Z, ee), função (t) {return (t.textContent || t.innerText || i (t)). indexOf (e)> - 1}}), lang: ue (função (e) {return V.test (e || "") || oe.error ("idioma não suportado:" + e), e = e.replace (Z, ee) .toLowerCase (), função (t) {var n; do {if (n = g? t .lang: t.getAttribute ("xml: lang") || t.getAttribute ("lang")) return (n = n.toLowerCase ()) === e || 0 === n.indexOf (e + " - ")} while ((t = t.parentNode) && 1 === t.nodeType); return! 1}}), target: function (t) {var n = localização local && local.hash; return n && n. fatia (1) === t.id}, raiz: função (e) {retorno e === h}, foco: função (e) {retorno e === p.activeElement && (! p.hasFocus || p .hasFocus ()) && !! (e.type || e.href || ~ e.tabIndex)}, ativado: pe (! 1), desativado: pe (! 0), verificado: function (e) {var t = e.nodeName.toLowerCase (); return "input" === t && !! e.checked || "opção" === t && !! e.selected}, selecionado: function (e) {return e.parentNode && e.parentNode.selectedIndex ,! 0 === e.selecionado}, vazio: function (e) {for (e = e.firstChild; e; e = e.nextSibling) if (e.nodeType <6) return! 1; return! 0} , pai: função (e) {retornar! r.pseudos.empty (e)}, cabeçalho: função (e) {retornar Y.test (e.nodeName)}, entrada: função (e) {retornar Q.test ( e.nodeName)}, botão: função (e) {var t = e.nodeName.toLowerCase (); retorna "input" === t && "button" === e.type || "button" === } texto: function (e) {var t; return "input" === e.nodeName.toLowerCase () && "text" === e.type && (null == (t = e.getAttribute ("type" )) || "text" === t.toLowerCase ())}, primeiro: he (function () {return [0]}), último: he (function (e, t) {return [t-1] }), eq:ele (função (e, t, n) {retorna [n <0? n + t: n]}), par:: ele (função (e, t) {para (var n = 0; n <t; n + = 2) e.push (n); return e}), ímpar: ele (função (e, t) {for (var n = 1; n <t; n + = 2) e.push (n); return e} ), lt: ele (função (e, t, n) {para (var r = n <0? n + t: n; - r> = 0;) e.push (r); return e}), gt: ele (função (e, t, n) {para (var r = n <0? n + t: n; ++ r <t;) e.push (r); retorno e})}}). pseudos.nth = r.pseudos.eq; for (t em {radio:! 0, caixa de seleção:! 0, arquivo:! 0, senha:! 0, imagem:! 0}) r.pseudos [t] = fe ( t); para (t em {submit:! 0, reset:! 0}) r.pseudos [t] = de (t); função ve () {} ve.protótipo = r.filters = r.pseudos, r .setFilters = new ve, a = oe.tokenize = function (e, t) {var n, i, o, a, u, s, l, c = N [e + ""]; se (c) retornar t? 0: c.slice (0); u = e, s = [], l = r.preFilter; while (u) {n &&! (I = F.exec (u)) || (i && (u = u. fatia (i [0] .length) || u), s.push (o = [])), n =! 1, (i = z.exec (u)) && (n = i.shift (), o.push ({value: n, digite: i [0] .replace ($, "")}), u = u.fatia (comprimento.n)); para (a no filtro r)! (i = X [a] .exec (u)) || l [a] &&! (i = l [a] (i)) | | (n = i.shift (), o.push ({valor: n, tipo: a, corresponde a: i}), u = u.slice (n.length)); se (! n) quebra} retornar t ? u.length: u? o.error (e): N (e, s) .slice (0)}; função ye (e) {for (var t = 0, n = e.length, r = "" ; t <n; t ++) r + = e [t] .valor; return r} função me (e, t, n) {var r = t.dir, i = t.next, o = i || r, a = n && "parentNode" === o, u = T ++; retorna a função t.first? (t, n, i) {while (t = t [r]) if (1 === t.nodeType || a) return e (t, n, i); return! 1}: function (t, n, s) {var l, c, f, d = [C, u]; if (s) {while (t = t [ r]) if ((1 === t.nodeType || a) && e (t, n, s)) retornam! 0} else while (t = t [r]) if (1 === t.nodeType | | a) se (f = t [x] || (t [x] = {}), c = f [t.uniqueID] || (f [t.uniqueID] = {}), i && i === t .nodeName.toLowerCase ()) t = t [r] || t; else {if ((l = c [o]) && l [0] === C&& l [1] === u) return d [2] = l [2]; se (c [o] = d, d [2] = e (t, n, s)) retornar! 0} retornar!1}} função be (e) {return e.length> 1? Function (t, n, r) {vari = e.length; while (i -) if (! E [i] (t, n, r)) return! 1; return! 0}: e [0]} função xe (e, t, n) {for (var r = 0, i = comprimento t; r <i; r ++) oe (e, t [r], n); return n} função we (e, t, n, r, i) {for (var o, a = [], u = 0, s = comprimento e, l = nulo! = t; u <s; u ++) (o = e [u]) && (n &&! n (o, r, i) || (a.push (o), l && t.push (u))); retornar a} função Ce (e, t, n, r, i, o) {retornar r &&! r [x] && (r = Ce (r)), i &&! i [x] && (i = Ce (i, o)) , ue (função (o, a, u, s) {var l, c, f, d = [], p = [], h = comprimento.a, g = o || xe (t || "*" , u.nodeType? [u]: u, []), v =! e ||! o && t? g: nós (g, d, e, u, s), y = n? i || (o? e : h || r)? []: a: v; if (n && n (v, y, u, s), r) {l = nós (y, p), r (l, [], u, s) , c = l.length; while (c -) (f = l [c]) && (y [p [c]] =! (v [p [c]] = f))} if (o) { if (i || e) {if (i) {l = [], c = y.length; while (c -) (f = y [c]) && l.push (v [c] = f); i (nulo, y = [], l, s)} c = y.length;Enquanto (c -) (f = y [c]) && (l = i? P (o, f): d [c])> - 1 && (o [l] =! (a [l] = f) )}} else y = we (y === a? y.splice (h, y.length): y), i? i (nulo, a, y, s): q.apply (a, y)} )} função Te (e) {para (var t, n, i, o = e.length, a = r.relativo [e [0]. tipo], u = a || r.relativo [""], s = a? 1: 0, c = me (função (e) {retorna e === t}, u,! 0), f = me (função (e) {retorna P (t, e)> - 1 }, u,! 0), d = [função (e, n, r) {vari =! a && (r || n! == l) || ((t = n) .nodeType? c (e, n, r): f (e, n, r)); return t = null, i}]; s <o; s ++) if (n = r.relativo [e [s] .type]) d = [me (be (d), n)]; else {if ((n = r.filter [e [s] .type] .apply (null, e [s] .matches)) [x]) {for (i = ++ s; i <o; i ++) if (r.relative [e [i] .type]) break; return Ce (s> 1 && be (d), s> 1 && ye (e.slice (0, s-1) .concat ({value: "" === e [s-2] .type? "*": ""})). replace ($, "$ 1"), n, s <i && Te (e.slice (s , i)), i <o && Te (e = e.slice (i)), i <o && ye (e))} d.push (n)} return be (d)} função Ee (e, t) {var n = comprimento t> 0, i = comprimento e comprimento> 0, o = função (o, a, u, s, c) {var f, h, v, y = 0, m = "0", b = o && [], x = [], w = l, T = o || i && r.find.TAG ("*", c) , E = C + = null == w? 1: Math.random () || .1, N = T.length; para (c && (l = a === p || a || c); m! = = N && null! = (F = T [m]); m ++) {if (i && f) {h = 0, a || documento do proprietário === p || (d (f), u =! G); while (v = e [h ++]) if (v (f, a || p, u)) {s.push (f); break} c && (C = E)} n && ((f =! v && f) && y-- , o && b.push (f))} if (y + = m, n && m! == y) {h = 0; while (v = t [h ++]) v (b, x, a, u); if (o) {se (y> 0) enquanto (m -) b [m] || x [m] || (x [m] = L. chamada (s)); x = nós (x)} q.aplicar ( s, x), c &&! o && x.length> 0 && y + t.length> 1 && oe.uniqueSort (s)} return c && (C = E, l = w), b}; return n? ue (o): o} return u = oe.compile = função (e, t) {var n, r = [], i = [], o = k [e + ""]; se (! o) {t || (t = a (e )), n = comprimento;Enquanto (n -) (o = Te (t [n])) [x]? r.push (o): i.push (o); (o = k (e, Ee (i, r)))) .selector = e} retornar o}, s = oe.select = função (e, t, n, i) {var o, s, l, c, f, d = "função" == tipo de e && e, p =! i && a (e = d.seletor || e); if (n = n || [], 1 === comprimento de p.) {if ((s = p [0] = p [0] .slice (0)) ) .length> 2 && "ID" === (l = s [0]). digite && 9 === t.nodeType && g && r.relative [s [1] .type]) {if (! (t = (r.find. ID (l.matches [0] .replace (Z, ee), t) || []) [0])) return n; d && (t = t.parentNode), e = e.slice (s.shift ( ) .value.length)} o = X.needsContext.test (e)? 0: s.length; while (o -) {if (l = s [o], r.relative [c = l.type] ) break; if ((f = r.find [c]) && (i = f (l.matches [0]. substitua (Z, ee), J.test (s [0] .type) && ge (t. parentNode) || t))) {if (s.splice (o, 1),! (e = i.length && ye (s))) return q.apply (n, i), n; break}}} return ( d || u (e, p)) (i, t,! g, n,! t || J.test (e) && ge (t.parentNode) || t), n}, n.sortStable = x.split (""). sort (A) .join ("") === x, n.detectDuplicates = !! f, d (), n.sortDetached = se (função (e) {return 1 & e.compareDocumentPosition (p .createElement ("fieldset"))}), se (function (e) {return e.innerHTML = "<a href='#'> </a>", "#" === e.firstChild.getAttribute ( "href")}) || le ("tipo | href | altura | largura", função (e, t, n) {if (! n) retorna e.getAttribute (t, "tipo" === t.toLowerCase ()? 1: 2)}), n.atributos && se (função (e) {return e.innerHTML = "<input />", e.firstChild.setAttribute ("value", "")) "" === e.firstChild.getAttribute ("valor")}) || le ("valor", função (e, t, n) {if (! n && "input" === e.nodeName.toLowerCase ()) return e. defaultValue}), se (função (e) {retornar nulo == e.getAttribute ("desativado")}) || le (H,function (e, t, n) {var r; if (! n) return! 0 === e [t]? t.toLowerCase () :( r = e.getAttributeNode (t)) && r.especificado? r. valor: null}), oe} (e); w.find = E, w.expr = E.seletores, w.expr [":"] = w.expr.pseudos, w.uniqueSort = w.unique = E .uniqueSort, w.text = E.getText, w.isXMLDoc = E.isXML, w.contains = E.contains, w.escapeSelector = E.escape; var N = função (e, t, n) {var r = [], i = nulo 0! == n; while ((e = e [t]) && 9! == e.nodeType) if (1 === e.nodeType) {if (i && w (e) .is ( n)) break; r.push (e)} retorna r}, k = função (e, t) {for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e! = = t && n.push (e); return n}, A = w.expr.match.needsContext; função D (e, t) {return e.nodeName && e.nodeName.toLowerCase () === t.toLowerCase ()} var S = / ^ <([az] [^ \ / \ 0>: \ x20 \ t \ r \ n \ f] *) [\ x20 \ t \ r \ n \ f] * \ /?> (?: <\ / \ 1> |) $ / i; função L (e, t, n) {return g (t)? W.grep (e, função (e, r) {return !! t.call (e, r, e)! == n}): t.nodeType? w.grep (e, função (e) {return e === t! == n}): "string"! = typeof t? w.grep (e, function (e) {return s.call ( t, e)> - 1! == n}): w.filter (t, e, n)} w.filter = função (e, t, n) {var r = t [0]; return n && (e = ": not (" + e + ")"), 1 === t.length && 1 === r.nodeType? w.find.matchesSelector (r, e)? [r]: []: w.find.matches (e, w.grep (t, função (e) {return 1 === e.nodeType}))}, w.fn.extend ({find: function (e) {var t, n, r = this. length, i = this; if ("string"! = typeof e) retorna this.pushStack (w (e) .filter (function () {for (t = 0; t <r; t ++) if (w.contains ( i [t], este)) return! 0})); for (n = this.pushStack ([]), t = 0; t <r; t ++) w.find (e, i [t], n) ; return r> 1? w.uniqueSort (n): n}, filter: function (e) {retorna this.pushStack (L (isto, e || [] ,! 1))}, não: function (e) {return this.pushStack (L (this, e || [] ,! 0))}, is: function (e) {return !! L (this, "string" == tipo de e&& A.test (e)? w e):e || [] ,! 1) .length}}); var j, q = / ^ (?: \ s * (<[\ w \ W] +>) [^>] * | # ([\ w -] +)) $ /; (w.fn.init = função (e, t, n) {vari, o; if (! e) retorna isso; if (n = n || j, "string" = = typeof e) {if (! (i = "<" === e [0] && ">" === e [e.length-1] && e.length> = 3? [null, e, null] : q.exec (e)) ||! i [1] && t) return! t || t.jquery? (t || n) .find (e): este.construtor (t) .find (e); if (i [1]) {if (t = instância de w? t [0]: t, w.merge (isto, w.parseHTML (i [1], t && t.nodeType? t.ownerDocument || t: r ,! 0)), S.test (i [1]) && w.isPlainObject (t)) para (i in t) g (este [i])? Isto [i] (t [i]): this.attr (i, t [i]); retorne isso} return (o = r.getElementById (i [2])) && (this [0] = o, this.length = 1),}} retorne e.nodeType? ( this [0] = e, this.length = 1, this): g (e)? void 0! == n.ready? n.ready (e): e (w): w.makeArray (e, isto) }). prototype = w.fn, j = w (r); var O = / ^ (?: pais | prev (?: Até | Todos)) /, P = {filhos:! 0, conteúdo :!0, próximo:! 0, prev:! 0}; w.fn.extend ({has: function (e) {var t = w (e, this), n = t.length; retorna this.filter (function ( ) {for (var e = 0; e <n; e ++) if (w.contains (this, t [e])) return! 0})}, mais próximo: function (e, t) {var n, r = 0, i = this.length, o = [], a = "string"! = Tipo de e &&w (e); if (! A.test (e)) para (; r <i; r ++) para (n = this [r]; n && n! == t; n = n.parentNode) if (n.nodeType <11 && (a? a.index (n)> - 1: 1 === n.nodeType && w.find.matchesSelector (n, e))) {o.push (n); break} retorna this.pushStack (o.length> 1? w.uniqueSort (o): o)}, índice: function (e) {return e? "string" = = typeof e? s.call (w (e), este [0]): s.call (this, e.jquery? e [0]: e): this [0] && this [0] .parentNode? this. primeiro (). prevAll (). length: -1}, add: function (e, t) {retorna this.pushStack (w.uniqueSort (w.uniqueSort (w.merge (this.get (), w (e, t)))) )}, addBack: function (e) {retorna this.add (null == e? this.prevObject: this.prevObject.filter (e))}}); function H (e, t) {while ((e = e [t]) && 1! == e.nodeType); return e} w.each ({parent: function (e) {var t = e.parentNode; return t && 11! == t.nodeType? t: null}, parent: function (e) {return N (e, "parentNode")}, parentUntil: function (e, t, n) {return N (e, "parentNode", n)}, next: function (e) {return H (e, "nextSibling")}, prev: function (e) {return H (e, "previousSibling")}, nextAll: function (e) {return N (e, "nextSibling")}, prevAll: function (e) {return N (e, "previousSibling")}, nextUntil: function (e, t, n) {return N ( e, "nextSibling", n)}, prevUntil: function (e, t, n) {return N (e, "previousSibling", n)}, irmãos: function (e) {return k ((e.parentNode || {}). firstChild, e)}, filhos: function (e) {return k (e.firstChild)}, conteúdo: function (e) {return D (e, "iframe")? e.contentDocument: (D ( e "modelo") && (e = e.content || e), w.merge ([], e.childNodes))}}, função (e, t) {w.fn [e] = função (n, r) {var i = w.map (isto, t, n); retorna "Até"! == e.slice (-5) && (r = n), r && "string" == tipo de r && (i = w.filter (r , i)), this.length> 1 && (P [e] || w.uniqueSort (i), O.test (e) && i.reverse ()), this.pushStack (i)}}); var I = / [^ \ x20 \ t \ r \ n \ f] + / g; função R (e) {var t = {}; retorna w.each (e.match (I) || [], função (e, n) {t [n] =! 0}), t} w.Callbacks = function (e) {e = "string" == tipo de e? R (e): w.extend ({}, e); var t, n, r, i, o = [], a = [], u = -1, s = função () {para (i = i || e.once, r = t =! 0; a.length ; u = -1) {n = a.shift (); while (++ u <o.length)! 1 === o [u] .apply (n [0], n [1]) && e.stopOnFalse && (u = o.length, n =! 1)} e.memória || (n =! 1), t =! 1, i && (o = n? []: "")}, l = {add: function () {return o && (n &&! t && (u = o.length-1, a.push (n)),function t (n) {w.each (n, function (n, r) {g (r)? e.unique && l.has (r) || o.push (r): r && r.length && "string"! == b (r) && t (r)})} (argumentos), n &&! t && s ()), isto}, remove: function () {retorna w.each (argumentos, função (e, t) {var n; while ( (n = w.inArray (t, o, n))> - 1) o.splice (n, 1), n ​​<= u && u -}), isto}, possui: function (e) {return e? w .inArray (e, o)> - 1: o.length> 0}, vazio: function () {retorna o && (o = []), isto}, desativa: function () {return i = a = [], o = n = "" isto}, desativado: function () {return! o}, lock: function () {return i = a = [], n || t || (o = n = ""), this}, locked: function () {return !! i}, fireWith: function (e, n) {return i || (n = [e, (n = n || []). slice? n.slice ( ): n], a.push (n), t || s ()), isto}, fire: function () {return l.fireCom (this, argumentos), this}, acionado: function () {return! ! r}}; retorne l};função B (e) {retornar e} função M (e) {lançar e} função W (e, t, n, r) {var i; tentar {e && g (i = promessa de e))? .done (t) .fail (n): e && g (i = e.then)? i.call (e, t, n): t.apply (void 0, [e] .slice (r))} catch ( e) {n.apply (void 0, [e])}} w.extend ({Adiado: função (t) {var n = [["notificar", "progresso", w.Callbacks ("memory"), w.Callbacks ("memória"), 2], ["resolver", "pronto", w.Callbacks ("uma vez memória"), w.Callbacks ("uma vez memória"), 0, "resolvido"], [" rejeitar "," falhar ", w.Callbacks (" uma vez memória "), w.Callbacks (" uma vez memória "), 1," rejeitado "]], r =" pendente ", i = {state: function () { return r}, sempre: function () {return o.done (argumentos) .fail (argumentos), isso}, "catch": function (e) {return i.then (null, e)}, pipe: function ( ) {var e = argumentos; retorna w.Diferido (função (t) {w.each (n, função (n, r) {vari = g (e [r [4]]) && e [r [4]]; o [r [1]] (função () {var e = i && i.apply (this, argumentos); e && g (e.promise)? e.promise (). progress (t.notify) .done (t.resolve) .fail (t.reject): t [r [0] + "With"] (isto, i? [e]: argumentos)})}), e = null}). promessa ()}, então: function (t, r, i) {var o = 0; função a (t, n, r, i) {função de retorno () {var u = isto, s = argumentos, l = função () {var e, l; if (! (T <o)) { if ((e = r.apply (u, s)) === n.promise ()) lança o novo TypeError ("Auto-resolução escalável"); l = e && ("objeto" == tipo de e || ") "== typeof e) &&.then, g (l)? i? l.call (e, a (o, n, B, i), a (o, n, M, i)) :( o ++, l .call (e, a (o, n, B, i), a (o, n, M, i), a (o, n, B, n.notifyWith))) :( r! == B && (u = void 0, s = [e]), (i || n.resolveWith) (u, s))}}, c = i? l: function () {try {l ()} catch (e) {w .Deferred.exceptionHook && w.Deferred.exceptionHook (e, c.stackTrace), t + 1> = o && (r! == M && (u = nulo 0, s = [e]), n.rejectWith (u, s))}}; t? c () :( w.Deferido .getStackHook && (c.stackTrace = w.Deferred.getStackHook ()), e.setTimeout (c))}} retornar w.Deferred (função (e) {n [0] [3] .adicionar (a (0, e , g (i)? i: B, e.notifyWith)), n [1] [3] .add (a (0, e, g (t)? t: B)), n [2] [3] .add (a (0, e, g (r)? r: M))}). promessa ()}, promessa: função (e) {retornar nulo! = e? w.extend (e, i): i }}, o = {}; retorna w.each (n, função (e, t) {var a = t [2], u = t [5]; i [t [1]] = a.add, u && a .add (function () {r = u}, n [3-e] [2] .disable, n [3-e] [3] .disable, n [0] [2] .lock, n [0] [3] .lock), a.add (t [3] .fire), o [t [0]] = function () {retorno o [t [0] + "With"] (this === o? void 0: isto, argumentos), isto}, o [t [0] + "With"] = a.fireWith}), i.promise (o), t &&t.call (o, o), o}, quando: função (e) {var t = argumentos.length, n = t, r = matriz (n), i = o.call (argumentos), a = w.Deferido (), u = função (e) {função de retorno ( n) {r [e] = isto,i [e] = argument.length> 1? o.call (argumentos): n, - t || a.resolveWith (r, i)}}; if (t <= 1 && (W (e, a.done (u (n)). resolve, a.rejeita,! t), "pendente" === a.state () || g (i [n] && i [n] .then))) return a.then ( ); while (n -) W (i [n], u (n), a.reject); return a.promise ()}}); var $ = / ^ (Eval | Interno | Intervalo | Referência | Sintaxe | Tipo | URI) Erro $ /; w.Deferred.exceptionHook = função (t, n) {e.console && e.console.warn && t && $. Test (nome.do) && e.console.warn ("jQuery.Deferred exception:" + t.message, t.stack, n)}, w.readyException = function (t) {e.setTimeout (function () {throw t})}; var F = w.Deferred (); w.fn.ready = function (e) {return F.then (e) ["catch"] (function (e) {w.readyException (e)}), isto}, w.extend ({isReady:! 1, readyWait: 1, pronto: função (e) {(! 0 === e? - w.readyWait: w.isReady) || (w.isReady =! 0,! 0! == e && - w.readyWait> 0 || F.resolveWith (r,[w]))}}), w.ready.then = F.then; função z () {r.removeEventListener ("DOMContentLoaded", z), e.removeEventListener ("carga", z), w.ready ( )} "complete" === r.readyState || "loading"! == r.readyState &&! r.documentElement.doScroll? e.setTimeout (w.ready) :( r.addEventListener ("DOMContentLoaded", z), e.addEventListener ("carga", z)); var _ = função (e, t, n, r, i, o) a) {var u = 0, s = comprimento e., l = nulo == n; if ("objeto" === b (n)) {i =! 0; para (u in n) _ (e, t, u, n [u] ,! 0, o, a)} else if (void 0! == r && (i =! 0, g (r) || (a =! 0), l && (a? (T.call (e, r), t = null) :( l = t, t = função (e, t, n) {retornar l.call (w (e), n)})), t)) para (; u <s; u ++) t (e [u], n, a? r: r.call (e [u], u, t (e [u], n))); return i? e: l? t.call (e): s? t (e [0], n): o }, U = / ^ - ms - /, V = / - ([az]) / g; função X (e, t) {retornar t.toUpperCase ()} função Q (e) {retornar e.replace (U , "ms -"). replace (V,X)} var Y = função (e) {return 1 === e.nodeType || 9 === e.nodeType ||! + E.nodeType}; função G () {this.expando = w.expando + G.uid ++} G.uid = 1, G.prototype = {cache: function (e) {var t = e [this.expando]; return t || (t = {}, Y (e) && (e. nodeType? e [this.expando] = t: Object.defineProperty (e, this.expando, {valor: t, configurável:! 0}))), t}, conjunto: função (e, t, n) {var r, i = this.cache (e); if ("string" == tipo de t) i [Q (t)] = n; caso contrário, para (r em t) i [Q (r)] = t [r] ; return i}, get: function (e, t) {return void 0 === t? this.cache (e): e [this.expando] && e [this.expando] [Q (t)]}, acesso : function (e, t, n) {return void 0 === t || t && "string" == tipo de t && void 0 === n? this.get (e, t) :( this.set (e, t , n), void 0! == n? n: t)}, remove: function (e, t) {var n, r = e [this.expando]; if (void 0! == r) {if ( void 0! == t) {n = (t = Array.isArray (t)? t.map (Q) :( t = Q (t)) em r? [t]: t.match (I) || []).comprimento;while (n -) delete r [t [n]]} (void 0 === t || w.isEmptyObject (r)) && (e.nodeType? e [this.expando] = void 0: delete e [ this.expando])}}, hasData: function (e) {var t = e [this.expando]; return void 0! == t &&! w.isEmptyObject (t)}}; var K = new G, J = novo G, Z = / ^ (?: \ {[\ w \ W] * \} | \ [[\ w \ W] * \]) $ /, ee = / [AZ] / g; função te (e ) {return "true" === e || "false"! == e && ("null" === e? null: e === + e + ""? + e: Z.test (e)? JSON .parse (e): e)} função ne (e, t, n) {var r; if (void 0 === n && 1 === e.nodeType) if (r = "data -" + t.replace ( ee, "- $ &"). toLowerCase (), "string" == typeof (n = e.getAttribute (r))) {try {n = te (n)} catch (e) {} J.set ( e, t, n)} else n = void 0; return n} w.extend ({hasData: function (e) {return J.hasData (e) || K.hasData (e)}, data: function (e , t, n) {return J.access (e, t, n)}, removeData: function (e, t) {J.remove (e, t)}, _ data: function (e, t, n) {return K.acesso (e, t, n)}, _ removeData: function (e, t) {K.remove (e, t)}}), w.fn.extend ({data: function (e, t) {var n, r, i, o = this [0], a = o && o.atributos; if (void 0 === e) {if (this.length && (i = J.get (o), 1 === o.nodeType &&! K.get (o, "hasDataAttrs"))) {n = a.length; while (n -) a [n] && 0 === (r = a [n] .name) .indexOf ("data-" ) && (r = Q (r.slice (5)), ne (o, r, i [r])); K.set (o, "hasDataAttrs",! 0)} retornar i} retornar "objeto" = = typeof e? this.each (function () {J.set (this, e)}): _ (this, function (t) {var n; if (o && void 0 === t) {if (void 0! == (n = J.get (o, e))) return n; if (void 0! == (n = ne (o, e))) retorna n} mais this.each (function () {J. set (this, e, t)})}, null, t, argument.length> 1, null,! 0)}, removeData: function (e) {retorna this.each (function () {J.remove (this , e)})}}), w.extend ({fila: função (e, t, n) {var r; se (e) retornar t = (t || "fx") + "fila", r = K.get (e, t), n && (! r || Array.isArray (n)? r = K.access (e, t, w.makeArray (n)): r.push (n)), r || [ ]}, desenfileirar: função (e, t) {t = t || "fx"; var n = w.queue (e, t), r = comprimento n, i = n.shift (), o = w ._queueHooks (e, t), a = function () {w.dequeue (e, t)}; "inprogress" === i && (i = n.shift (), r -), i && ("fx" === t && n.unshift ("inprogress"), exclua o.stop, i.call (e, a, o)) ,! r && o && o.empty.fire ()}, _ queueHooks: function (e, t) {var n = t + "queueHooks"; retornar K.get (e, n) || K.access (e, n, {vazio: w.Callbacks ("uma vez memória").) add (function () {K.remove (e, [t + "fila", n])})})}}), w.fn.extend ({fila: função (e, t) {var n = 2; retornar "string"! = tipo de e && (t = e , e = "fx", n -), argumentos.length <n? w.queue (this [0], e): void 0 === t? this: this.each (function () {var n = w.queue (this, e, t); w._queueHooks (this, e), "fx "=== e &&" inprogress "! == n [0] && w.dequeue (this, e)})}, desenfileire: function (e) {retorne this.each (function () {w.dequeue (this, e)})}, clearQueue: function (e) {retorna this.queue (e || "fx", [])}, promessa: function (e, t) {var n, r = 1, i = w. Adiado (), o = isto, a = este.length, u = função () {- r || i.resolveWith (o, [o])}; "string"! = Tipo de e && (t = e, e = vazio 0), e = e || "fx"; while (a -) (n = K.get (o [a], e + "queueHooks")) && n.empty && (r ++, n.empty.add ( u)); return u (), i.promise (t)}}); var re = / [+ -]? (?: \ d * \. |) \ d + (?: [eE] [+ -] ? \ d + |) /. fonte, ie = new RegExp ("^ (?: ([+ -]) = |) (" + re + ") ([az%] *) $", "i"), oe = ["Superior", "Direita", "Inferior", "Esquerda"], ae = função (e, t) {retornar "nenhum" === (e = t || e) .style.display || " "=== e.style.display && w.contains (e.ownerDocument, e) && "none" === w.css (e, "display")}, ue = function (e, t, n, r) {var i, o, a = {}; for (o em t) a [o] = e.style [o], e.style [o] = t [o]; i = n.aplicar (e, r || []); para (o em t) e.style [o] = a [o]; return i}; function se (e, t, n, r) {var i, o, a = 20, u = r? function () {return r.cur ()}: função () {retornar w.css (e, t, "")}, s = u (), l = n && n [3] || (w.cssNúmero [t]? "": "px"), c = (w.cssNumber [t] || "px"! == l && + s) && ie.exec (w.css (e, t)); if (c && c [3]! == l) {s / = 2, l = l || c [3], c = + s || 1; enquanto (a -) w.style (e, t, c + l), (1-o) * (1- (o = u () /s||.5)) <= 0 && (a = 0), c / = o; c * = 2, estilo w (e, t, c + l), n = n || []} retornar n && (c = + c || + s || 0, i = n [1]? c + (n [1] +1) * n [2]: + n [2], r && (r.unidade = l , r.start = c, r.end = i)), i} var le = {}; função ce (e) {var t, n = e.ownerDocument, r = e.nodeName, i = le [r] ; return i || (t = n.body.appendChild (n.createElement (r)), i = w.css (t,"display"), t.parentNode.removeChild (t), "none" === i && (i = "bloco"), le [r] = i, i)} função fe (e, t) {for (var n, r, i = [], o = 0, a = e.length; o <a; o ++) (r = e [o]). style && (n = r.style.display, t? ("nenhum" === n && (i [o] = K.get (r, "exibição") || nulo, i [o] || (r.style.display = "")), "" === r.style .display && ae (r) && (i [o] = ce (r))): "nenhum"! == n && (i [o] = "nenhum", K.set (r, "exibição", n))) ; for (o = 0; o <a; o ++) null! = i [o] && (e [o] .style.display = i [o]); return e} w.fn.extend ({show: function () {retornar fe (isto,! 0)}, ocultar: função () {retornar fe (isto)}, alternar: função (e) {retornar "booleano" == tipo de e? e? this.show (): this.hide (): this.each (function () {ae (this)? w (this) .show (): w (this) .hide ()})}}); var de = / ^ (?: caixa de seleção | radio) $ / i, pe = / <([az] [^ \ / \ 0> \ x20 \ t \ r \ n \ f] +) / i,ele = / ^ $ | ^ módulo $ | \ / (?: java | ecma) script / i, ge = {opção: [1, "<selecione múltiplo = 'múltiplo'>", "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table> <colgroup>", "</colgroup> </table>"], tr: [2, "<table> <tbody>", "</tbody> </table>"], td: [3, "<table> <tbody> <tr>", "</tr> </tbody> </ table > "], _ padrão: [0," "," "]}; ge.optgroup = ge.option, ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead, ge.th = ge .td; função ve (e, t) {var n; return n = "indefinido"! = tipo de e.getElementsByTagName? e.getElementsByTagName (t || "*"): "indefinido"! = tipo de e.querySelectorAll? e .querySelectorAll (t || "*"): [], nulo 0 === t || t && D (e,t)? w.merge ([e], n): n} função ye (e, t) {para (var n = 0, r = comprimento.n; n <r; n ++) K.set (e [n ], "globalEval",! t || K.get (t [n], "globalEval"))} var me = / <| & #? \ w +; /; função be (e, t, n, r, i) {for (var o, a, u, s, l, c, f = t.createDocumentFragment (), d = [], p = 0, h = comprimento.p; p <h; p ++) if (( o = e [p]) || 0 === o) if ("objeto" === b (o)) w.merge (d, o.nodeType? [o]: o); caso contrário, se (eu. teste (o)) {a = a || f.appendChild (t.createElement ("div")), u = (pe.exec (o) || ["", ""]) [1] .toLowerCase ( ), s = ge [u] || ge._default, a.innerHTML = s [1] + w.htmlPrefilter (o) + s [2], c = s [0]; enquanto (c -) a = a.lastChild; w.merge (d, a.childNodes), (a = f.firstChild) .textContent = ""} else d.push (t.createTextNode (o)); f.textContent = "", p = 0; while (o = d [p ++]) if (r && w.inArray (o, r)> - 1) i && i.push (o); caso contrário, se (l = w.contains (o.ownerDocument, o), a = ve (f.appendChild (o), "script"),l && ye (a), n) {c = 0; while (o = a [c ++]) he.test (o.type || "") && n.push (o)} retorno f}! function () {var e = r.createDocumentFragment (). appendChild (r.createElement ("div")), t = r.createElement ("entrada"); t.setAttribute ("tipo", "rádio"), t.setAttribute ("marcado" , "marcado"), t.setAttribute ("nome", "t"), e.appendChild (t), h.checkClone = e.cloneNode (! 0) .cloneNode (! 0) .lastChild.checked, e. innerHTML = "<textarea> x </textarea>", h.noCloneChecked = !! e.cloneNode (! 0) .lastChild.defaultValue} (); var xe = r.documentElement, nós = / ^ key /, Ce = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,Te=/^([^.}*)(?:\.(.+)|)/;função Ee () {return! 0} função Ne () {return! 1} função ke () {tente {retornar r.activeElement} catch (e) {}} função Ae (e, t, n, r, i, o) {var a, u ; if ("objeto" == tipo de t) {"string "! = typeof n && (r = r || n, n = nulo 0); para (u in t) Ae (e, u, n, r, t [u], o); retornar e} if (null == r && null == i? (i = n, r = n = vazio 0): null == i && ("string" == tipo de n? (i = r, r = vazio 0) :( i = r, r = n, n = vazio 0)) ,! 1 === i) i = Ne; caso contrário, se (! i) retornar e; return 1 === o && (a = i, (i = function (e) {return w (). off (e), a.apply (this, argument)}). guid = a.guid || (a.guid = w.guid ++)), e.each (function () {w.event. add (this, t, i, r, n)})} w.event = {global: {}, add: function (e, t, n, r, i) {var o, a, u, s, l , c, f, d, p, h, g, v = K.get (e); if (v) {n.handler && (n = (o = n) .handler, i = o.seletor), i && w. find.matchesSelector (xe, i), n.guid || (n.guid = w.guid ++), (s = v.eventos) || (s = v.events = {}), (a = v.handle ) || (a = v.handle = function (t) {return "undefined"! = tipo de w && w.event.triggered! == t.type? w.event.dispatch.apply (e, argumentos): void 0} ), l = (t = (t || ""). corresponde (I) || [""]). comprimento;while (l -) p = g = (u = Te.exec (t [l]) || []) [1], h = (u [2] || ""). split (".") .sort (), p && (f = w.event.special [p] || {}, p = (i? f.delegateType: f.bindType) || p, f = w.event.special [p] | | {}, c = w.extend ({type: p, origType: g, dados: r, manipulador: n, guid: n.guid, seletor: i, needsContext: i && w.expr.match.needsContext.test (i ), namespace: h.join (".")}, o), (d = s [p]) || ((d = s [p] = []). delegateCount = 0, f.setup &&! 1! == f.setup.call (e, r, h, a) || e.addEventListener && e.addEventListener (p, a)), f.add && (f.add.call (e, c), c.handler.guid || (c.handler.guid = n.guid)), i? d.splice (d.delegateCount ++, 0, c): d.push (c), w.event.global [p] =! 0)} }, remove: function (e, t, n, r, i) {var o, a, u, s, l, c, f, d, p, h, g, v = K.hasData (e) && K. get (e); if (v && (s = v.events)) {l = (t = (t || ""). match (I) || [""]). length; while (l--) if (u = Te.exec (t [l]) || [], p = g = u [1], h = (u [2] || "") .split (". "). sort (), p) {f = w.event.special [p] || {}, d = s [p = (r? f.delegateType: f.bindType) | | p] || [], u = u [2] && new RegExp ("(^ | \\.)" + h.join ("\\. (?:. * \\. |)") + "( \\. | $) "), a = o = d.length; enquanto (o -) c = d [o] ,! i && g! == c.origType || n && n.guid! == c.guid | | u &&! u.test (c.namespace) || r && r! == c.selector && ("**"! == r ||! c.selector) || (d.splice (o, 1), c. seletor && d.delegateCount -, f.remove && f.remove.call (e, c)); a &&! d.length && (f.teardown &&! 1! == f.teardown.call (e, h, v.handle) || w.removeEvent (e, p, v.handle), exclua s [p])} else para (p em s) w.event.remove (e, p + t [l], n, r,! 0); w.isEmptyObject (s) && K.remove (e, "manipular eventos")}}, dispatch: function (e) {var t = w.event.fix (e), n, r, i, o, a, u , s = nova matriz (argument.length), l = (K.get (isto, "eventos") || {}) [t.tipo] || [], c = w.event.special [t.type] || {}; for (s [0] = t, n = 1; n <argumentos.length; n ++) s [n] = argumentos [n]; if (t.delegateTarget = this,! c.preDispatch ||! 1! == c.preDispatch.call (this, t)) {u = w.event.handlers.call (this, t, l), n = 0; while ((o = u [n ++]) &&! t.isPropagationStopped ()) {t.currentTarget = o.elem, r = 0; while ((a = o.handlers [r ++]) &&! t.isImmediatePropagationStopped ()) t.rnamespace &&! t.rnamespace.test (a.namespace) || (t.handleObj = a, t.data = a.data, nulo 0! == (i = ((w .event.special [a.origType] || {}). handle || a.handler) .apply (o.elem, s)) &&! 1 === (t.result = i) && (t.preventDefault (), t.stopPropagation ()))} return c.postDispatch && c.postDispatch.call (this, t), t.result}}, manipuladores: function (e, t) {var n, r, i, o, a , u = [], s = t.delegateCount, l = e.target; if (s && l.nodeType &&! ("click" === e.type && e.button> = 1)) para (; l! == this; l = l.parentNode || this) if (1 === l.nodeType && ("click"! == e.type ||! 0! == l.disabled)) {for (o = [], a = {}, n = 0; n <s; n ++) void 0 === a [i = (r = t [n]). Seletor + ""] && (a [i] = r.needsContext? W (i, this) .index (l)> - 1: w.find (i, this, null, [l]). length), a [i] && o.push (r); o.length && u.push ({elem: l, manipuladores: o })} return l = this, s <t.length && u.push ({elem: l, manipuladores: t.slice (s)}), u}, addProp: function (e, t) {Object.defineProperty (w. Event.prototype, e, {enumerável:! 0, configurável:! 0, get: g (t)? Function () {if (this.originalEvent) retorna t (this.originalEvent)}: function () {if (this .originalEvent) retorna this.originalEvent [e]}, define: function (t) {Object.defineProperty (this, e, {enumerable:! 0, configurable:! 0, gravável:! 0, valor: t})}} )}, fix: function (e) {return e [w.expando]? e: new w.Event (e)}, especial: {load: {noBubble:! 0}, foco: {trigger: function () { if (this! == ke () && this.focus) retorna this.focus () ,! 1}, delegateType: "focusin"}, desfoque: {trigger: function () {if (this === ke () && this.blur) retorna this.blur () ,! 1}, delegateType: "focusout"}, clique em: {trigger: function () {if ("checkbox" === this.type && this.click && D (this, "input")) retorne this.click () ,! 1}, _ padrão: function (e) {return D (e.target, "a")}}, antes da descarga: {postDispatch: function (e) {void 0! == e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)}}}}, w.removeEvent = function (e, t, n) {e.removeEventListener && e.removeEventListener (t, n)}, w.Event = function (e, t) {if (! ( esta instância de w.Event)) retorna novo w.Event (e, t); e && e.type? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || void 0 == = e.defaultPrevented &&! 1 === e.returnValue? Ee: Ne, isso.target = e.target && 3 === e.target.nodeType? e.target.parentNode: e.target, this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget): this.type = e, t &&w.extend (this, t), this.timeStamp = e && e.timeStamp || Date.now (), this [w.expando] =! 0}, w.Event.prototype = {construtor: w.Event, isDefaultPrevented: Ne, isPropagationStopped : Ne, isImmediatePropagationStopped: Ne, isSimulated:! 1, preventDefault: function () {var e = this.originalEvent; this.isDefaultPrevented = Ee, &&& this.isSimulated && e.preventDefault ()}, stopPropagation: function () {var e = = this.originalEvent; this.isPropagationStopped = Ee, e &&! this.isSimulated && e.stopPropagation ()}, stopImmediatePropagation: function () {var e = this.originalEvent; this.isImmediatePropagationStopped = Ee, e &&! , this.stopPropagation ()}}, w.each ({altKey:! 0, bolhas:! 0, cancelável:! 0, alterouTouches:! 0, ctrlKey:! 0, detalhe:! 0, eventPhase:! 0, metaKey:! 0, páginaX:! 0, páginaY: ! 0, shiftKey:! 0, visualização:! 0, "char":! 0, charCode:! 0, chave:! 0, keyCode:! 0, botão:! 0, botões:! 0, clientX:! 0, clientY:! 0, offsetX:! 0, offsetY:! 0, pointerId:! 0, pointerType:! 0, screenX:! 0, screenY:! 0, targetTouches:! 0, toElement:! 0, toques:! 0, qual: function (e) {var t = e.button; return null == e.que &&teste (e.type)? null! = e.charCode? e.charCode: e.keyCode:! e.which && void 0! == t && Ce.test (e.type)? 1 & t? 1: 2 & t? 3: 4 & t? 2: 0: e.qual}}, w.event.addProp), w.each ({mouseenter: "mouseover", mouseleave : "mouseout", ponteiro: "ponteiroover", ponteiroleave: "ponteiro"}, função (e, t) {w.event.special [e] = {delegateType: t, bindType: t, handle: function (e) { var n, r = isso, i = e.relatedTarget, o = e.handleObj;return i && (i === r || w.contains (r, i)) || (e.type = o.origType, n = o.handler.apply (isto, argumentos), e.type = t), n}}}), w.fn.extend ({on: function (e, t, n, r) {retorna Ae (this, e, t, n, r)}, um: function (e, t, n , r) {return Ae (this, e, t, n, r, 1)}, off: function (e, t, n) {var r, i; if (e && e.preventDefault && e.handleObj) return r = e. handleObj, w (e.delegateTarget) .off (r.namespace? r.origType + "." + r.namespace: r.origType, r.selector, r.handler), este; if ("objeto" == tipo de e ) {for (i in e) this.off (i, t, e [i]); retorne isso} return! 1! == t && "function"! = typeof t || (n = t, t = void 0 ), 1 === n && (n = Ne), this.each (function () {w.event.remove (this, e, n, t)})}}); var De = / <(?! area | br | col | embed | hr | img | input | link | meta | param) (([az] [^ \ / \ 0> \ x20 \ t \ r \ n \ f] *) [^>] * ) \ /> / gi, Se = / <script | <estilo | <link / i, Le = / verificado \ s * (?: [^ =] | = \ s *. verificado.) / i, je = / ^ \ s * <! (?:\ [CDATA \ [| -) | (?: \] \] | -)> \ s * $ / g; função qe (e, t) {retorna D (e, "tabela") && D (11! == t.nodeType? t: t.firstChild, "tr")? w (e) .children ("tbody") [0] || e: e} função Oe (e) {retorno e.type = (null ! == e.getAttribute ("tipo")) + "/" + e.type, e} função Pe (e) {retorne "true /" === (e.type || ""). slice (0 , 5)? E.type = e.type.slice (5): e.removeAttribute ("type"), e} função Ele (e, t) {var n, r, i, o, a, u, s , l; if (1 === t.nodeType) {if (K.hasData (e) && (o = K.access (e), a = K.set (t, o), l = o.eventos) ) {delete a.handle, a.events = {}; for (i in l) for (n = 0, r = l [i] .length; n <r; n ++) w.event.add (t, i , l [i] [n])} J.hasData (e) && (u = J.access (e), s = w.extend ({}, u), J.set (t, s))}} função Ie (e, t) {var n = t.nodeName.toLowerCase (); "input" === n && de.test (e.type)? t.checked = e.checked: "input"! == n && "textarea "! == n || (t.defaultValue = e.defaultValue)} função Re (e, t, n, r) {t = a.apply ([], t); var i, o, u, s , l, c, f = 0, d = comprimento e, p = d-1, v = t [0], y = g (v); se (y || d> 1 && "string" == tipo de v && ! h.checkClone && Le.test (v)) return e.each (function (i) {var o = e.eq (i); y && (t [0] = v.call (this, i, o.html ()) )), Re (o, t, n, r)}); if (d && (i = be (t, e [0] .ownerDocument,! 1, e, r), o = i.firstChild, 1 == = i.childNodes.length && (i = o), o || r)) {for (s = (u = w.map (ve (i, "script"), Oe)). length; f <d; f ++ ) l = i, f! == p && (l = w.clone (l,! 0,! 0), s && w.merge (u, ve (l, "script"))), n.call (e [f ], l, f); if (s) para (c = u [u.length-1] .ownerDocument, w.map (u, Pe), f = 0; f <s; f ++) l = u [f ], he.test (l.type || "") &&! K.access (l, "globalEval") && w.contains (c, l) && (l.src && "module"! == (l.type | | "").toLowerCase ()? w._evalUrl && w._evalUrl (l.src): m (l.textContent.replace (je, ""), c, l))} retornar e} função Be (e, t, n) {for ( var r, i = t? w.filter (t, e): e, o = 0; nulo! = (r = i [o]); o ++) n || 1! == r.nodeType || w. cleanData (ve (r)), r.parentNode && (n && w.contains (r.ownerDocument, r) && ye (ve (r, "script")), r.parentNode.removeChild (r)); return e} w.extend ({htmlPrefilter: function (e) {return e.replace (De, "<$ 1> </ $ 2>")}, clone: ​​function (e, t, n) {var r, i, o, a, u = e.cloneNode (! 0), s = w.contains (e.ownerDocument, e); if (! (h.noCloneChecked || 1! == e.nodeType && 11! == e.nodeType || w.isXMLDoc (e ))) para (a = ve (u), r = 0, i = (o = ve (e)). length; r <i; r ++) Ie (o [r], a [r]); if ( t) se (n) para (o = o || ve (e), a = a || ve (u), r = 0, i = o.length; r <i; r ++) He (o [r] , a [r]); caso contrário, Ele (e, u); return (a = ve (u, "script")). length> 0 && ye (a,! s && ve (e, "script")), u}, cleanData: function (e) {for (var t, n, r, i = w.event.special, o = 0; void 0! == (n = e [o]); o ++) if (Y (n)) {if (t = n [K.expando]) {if (t.events) for (r in t.events) i [r]? w.event.remove (n, r): w.removeEvent (n, r, t.handle); n [K.expando] = nulo 0} n [J.expando] && (n [J.expando] = nulo 0)}}}), w.fn. estender ({desanexar: função (e) {retornar Be (este, e,! 0)}, remover: função (e) {retornar ser (este, e)}, texto: função (e) {retornar _ (este, function (e) {return void 0 === e? w.text (this): this.empty (). each (function () {1! == this.nodeType && 11! == this.nodeType && 9! == this. nodeType || (this.textContent = e)})}, null, e, argument.length)}, anexa: function () {return Re (argumento, função (e) {1! == this.nodeType && 11! == this.nodeType && 9! == this.nodeType || qe (isso, e) .appendChild (e)})}, prefixo: function () {return Re (isto, argumentos, função (e) {if (1 = == this.nodeType || 11 === this.nodeType || 9 === isso.nodeType) {var t = qe (this, e); t.insertBefore (e, t.firstChild)}})}, antes: function () {return Re (this, argumentos, function (e) {this.parentNode && this. parentNode.insertBefore (e, this)})}, after: function () {return Re (this, argumentos, função (e) {this.parentNode && this.parentNode.insertBefore (e, this.nextSibling)})}, vazio: função () {para (var e, t = 0; nulo! = (e = isto [t]); t ++) 1 === e.nodeType && (w.cleanData (ve (e,! 1)), e. textContent = ""); retorne isso}, clone: ​​function (e, t) {retorne e = null! = e && e, t = null == t? e: t, this.map (function () {return w.clone (this, e, t)})}, html: function (e) {return _ (this, function (e) {var t = this [0] || {}, n = 0, r = this.length; if (void 0 === e && 1 === t.nodeType) retorna t.innerHTML; if ("string" == tipo de e &&! Se.test (e) &&! ge [(pe.exec (e) || [ "", ""]) [1] .toLowerCase ()]) {e = w.htmlPrefilter (e); tente {for (;n <r; n ++) 1 === (t = este [n] || {}). nodeType && (w.cleanData (ve (t,! 1)), t.innerHTML = e); t = 0} catch (e) {}} t && this.empty (). append (e)}, null, e, argumentos.length)}, replaceWith: function () {var e = []; return Re (this, argumentos, função (t ) {var n = this.parentNode; w.inArray (this, e) <0 && (w.cleanData (ve (this)), n && n.replaceChild (t, this))}, e)}}), w.each ({appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith"}, function (e, t) {w.fn [e] = function (e ) {for (var n, r = [], i = w (e), o = i.length-1, a = 0; a <= o; a ++) n = a === o? this: this. clone (! 0), w (i [a]) [t] (n), u.apply (r, n.get ()); retorna this.pushStack (r)}}); var Me = new RegExp ( "^ (" + re + ") (?! px) [az%] + $", "i"), We = function (t) {var n = t.ownerDocument.defaultView; return n && n.opener || (n = e), n.getComputedStyle (t)}, $ e = new RegExp (oe.join ("|"), "i") ;! function () {function t () {if (c) {l.style.cssText = "position: absoluto; esquerda: -11111px; largura: 60px; margem superior: 1px; preenchimento: 0; borda: 0 ", c.style.cssText =" posição: relativa; exibição: bloco; tamanho da caixa: borda-caixa; estouro : rolagem; margem: auto; borda: 1px; preenchimento: 1px; largura: 60%; top: 1% ", xe.appendChild (l) .appendChild (c); var t = e.getComputedStyle (c); i = "1%"! == t.top, s = 12 === n (t.marginLeft), c.style.right = "60%", u = 36 === n (t.right), o = 36 === n (t.width), c.style.position = "absoluto", a = 36 === c.offsetWidth || "absoluto", xe.removeChild (l), c = null}} função n (e) {return Math.round (parseFloat (e))} var i, o, a, u, s, l = r.createElement ("div"), c = r.createElement ("div"); c. style && (c.style.backgroundClip = "caixa de conteúdo", c.cloneNode (! 0) .style.backgroundClip = "", h.clearCloneStyle = "content-box" === c.style.backgroundClip, w.extend (h, {boxSizingReliable: function () {retorna t (), o}, pixelBoxStyles: function () { return t (), u}, pixelPosition: function () {return t (), i}, reliableMarginLeft: function () {return t (), s}, scrollboxSize: function () {return t (), a}} ))}} (); função Fe (e, t, n) {var r, i, o, a, u = e.style; return (n = n || Nós (e)) && (""! == (a = n.getPropertyValue (t) || n [t]) || w.contains (e.ownerDocument, e) || (a = w.style (e, t)) ,! h.pixelBoxStyles () && Me .test (a) && $ e.test (t) && (r = u.width, i = u.minWidth, o = u.maxWidth, u.minWidth = u.maxWidth = u.width = a, a = n .width, u.width = r, u.minWidth = i, u.maxWidth = o)), void 0! == a? a + "": a} função ze (e, t) {return {get: function ( ) {if (! e ()) return (this.get = t) .apply (this, argument); delete this.get}}} var _e = / ^ (nenhum | tabela (?! - c [ea]) . +) /, Ue = / ^ - /,Ve = {position: "absolute", visibilidade: "hidden", display: "block"}, Xe = {letterSpacing: "0", fontWeight: "400"}, Qe = ["Webkit", "Moz", " ms "], Ye = r.createElement (" div "). estilo; função Ge (e) {se (e em Ye) retorna e; var t = e [0] .toUpperCase () + e.slice (1) , n = Qe.length; while (n -) if ((e = Qe [n] + t) em Ye) retorna e} função Ke (e) {var t = w.cssProps [e]; return t | | (t = w.cssProps [e] = Ge (e) || e), t} função Je (e, t, n) {var r = ie.exec (t); retornar r? Math.max (0 , r [2] - (n || 0)) + (r [3] || "px"): t} função Ze (e, t, n, r, i, o) {var a = "width" === t? 1: 0, u = 0, s = 0; se (n === (r? "borda": "conteúdo")) retornar 0; para (; (a <4; a + = 2) " margem "=== n && (s + = w.css (e, n + oe [a] ,! 0n (e) {return !! (e.offsetWidth || e.offsetHeight || e.getClientRects (). length)}, h.createHTMLDocument = function () {var e = r.implementation.createHTMLDocument (""). body; return e.innerHTML = "<form> </form> <form> </form>", 2 === e.childNodes.length} (), w.parseHTML = function (e, t, n) { if ("string"! = tipo de e) return []; "boolean" == tipo de t && (n = t, t =! 1); var i, o, a; return t || (h.createHTMLDocument? (( i = (t = r.implementation.createHTMLDocument ("")). createElement ("base")). href = localização.href, t.head.appendChild (i)): t = r), o = S .exec (e), a =! n && [], o? [t.createElement (o [1])] :( o = be ([e], t, a), a && a.length && w (a) .remove ( ), w.merge ([], o.childNodes))}, w.offset = {setOffset: function (e, t, n) {var r, i, o, a, u, s, l, c = w .css (e, "posição"), f = w (e), d = {}; "estático" === c && (e.style.posição = "relativo"), u = f.offset (), o = w.css (e, "superior"), s = w.css (e, "esquerda"), (l = ("absoluto" == = c || "corrigido" === c) && (o + s) .indexOf ("auto")> - 1)? (a = (r = f.position ()). top, i = r.left ) :( a = parseFloat (o) || 0, i = parseFloat (s) || 0), g (t) && (t = t.call (e, n, w.extend ({}, u)) ), null! = t.top && (d.top = t.top-u.top + a), null! = t.left && (d.left = t.left-u.left + i), "usando" em t.using.call (e, d): f.css (d)}}, w.fn.extend ({offset: function (e) {if (argument.length) retorna nulo 0 === e? this: this.each (function (t) {w.offset.setOffset (this, e, t)}); var t, n, r = this [0]; if (r) retorna r.getClientRects (). length ? (t = r.getBoundingClientRect (), n = r.ownerDocument.defaultView, {top: t.top + n.pageYOffset, à esquerda: t.left + n.pageXOffset}): {top: 0, à esquerda: 0} }, position: function () {if (this [0]) {var e, t, n, r = this [0], i = {top: 0, left: 0}; if ("fixo "=== w.css (r," posição ")) t = r.getBoundingClientRect (); else {t = this.offset (), n = r.ownerDocument, e = r.offsetParent || n.documentElement ; while (e && (e === n.body || e === n.documentElement) && "static" === w.css (e, "position")) e = e.parentNode; e && e! == r && 1 === e.nodeType && ((i = w (e) .offset ()). top + = w.css (e, "borderTopWidth",! 0), i.left + = w.css (e, "borderLeftWidth" ,! 0))} return {top: t.top-i.top-w.css (r, "marginTop",! 0), esquerda: t.left-i.left-w.css (r, "marginLeft ",! 0)}}}, offsetParent: function () {retorna this.map (function () {var e = this.offsetParent; while (e &&" static "=== w.css (e," position ") ) e = e.offsetParent; return e || xe})}}), w.each ({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, função (e, t) {var n = "pageYOffset" = == t; w.fn [e] = função (r) {return _ (esta, função (e, r, i) {var o; if (v (e)? o = e: 9 === e.nodeType && (o = e. defaultView), void 0 === i) return o? o [t]: e [r]; o? o.scrollTo (n? o.pageXOffset: i, n? i: o.pageYOffset): e [r] = i}, e, r, argumentos. comprimento)}}), w.each (["top", "left"], função (e, t) {w.cssHooks [t] = ze (h.pixelPosition, função (e, n) {se (n) retornar n = Fe (e, t), Me.test (n)? w (e) .position () [t] + "px": n})}), w.each ({Altura: "altura", Largura: "largura"}, função (e, t) {w.each ({preenchimento: "interno" + e, conteúdo: t, "": "externo" + e }, função (n, r) {w.fn [r] = função (i, o) {var a = argumentos.length && (n || "booleano"! = tipo de i), u = n || (! 0 === i ||! 0 === o? "margin": "border"); return _ (this, function (t, n, i) {var o; return v (t)? 0 === r .indexOf ("outer")? t ["inner" + e]: t.document.documentElement ["cliente "+ e]: 9 === t.nodeType? (o = t.documentElement, Math.max (t.body [" rolagem "+ e], o [" rolagem "+ e], t.body [" deslocamento "+ e], o [" deslocamento "+ e], o [" cliente "+ e])): void 0 === i? w.css (t, n, u): w.style (t, n, i, u)}, t, a? i: void 0, a)}}))), w.each ("desfocar o foco no foco no redimensionamento, redimensionar a rolagem, clique em dblclique na mouse desmontado da mouse em cima do mouse), mude o mouse sobre o mouse sobre o mouse, entre em contato com o mouse alteração de seleção selecione enviar pressionamento de tecla pressionado. menu de contexto do keyup ".split (" "), função (e, t) {w.fn [t] = função (e, n) {retornar argumentos.length> 0? isto.on (t, nulo, e, n) : this.trigger (t)}}), w.fn.extend ({hover: function (e, t) {retorna this.mouseenter (e) .mouseleave (t || e)}}), w.fn. estender ({bind: function (e, t, n) {retornar this.on (e, null, t, n)}, unbind: function (e, t) {retornar this.off (e, null, t)} , delegar: função (e, t, n, r) {retornar this.on (t, e, n, r)}, cancelar a exclusão: função (e, t,n) {return 1 === argument.length? this.off (e, "**"): this.off (t, e || "**", n)}}), w.proxy = function ( e, t) {var n, r, i; if ("string" == tipo de t && (n = e [t], t = e, e = n), g (e)) return r = o.call ( argumentos, 2), i = function () {retorna e.apply (t || isso, r.concat (o.call (argumentos)))}, i.guid = e.guid = e.guid || w. guid ++, i}, w.holdReady = função (e) {e? w.readyWait ++: w.ready (! 0)}, w.isArray = Array.isArray, w.parseJSON = JSON.parse, w.nodeName = D , w.isFunction = g, w.isWindow = v, w.camelCase = Q, w.type = b, w.now = Date.now, w.isNumeric = função (e) {var t = w.type (e ); return ("number" === t || "string" === t) &&! isNaN (e-parseFloat (e))}, "function" == tipo de definição && define.amd && define ("jquery", [] () () () () () () () () () () () () () () () () () () () () () () () () () () () (). .jQuery === w && (e.jQuery = vt), w}, t || (e.jQuery = e. $ = w), w});